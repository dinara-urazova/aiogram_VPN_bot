from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.enums import ParseMode

from keyboards import (
    start_kb,
    go_back,
    connection_kb,
    buy_kb,
    help_kb,
    one_month_kb,
    three_months_kb,
    six_months_kb,
)

router = Router()


@router.message(CommandStart)
async def cmd_start(message: Message):
    text = "üëã –ü—Ä–∏–≤–µ—Ç!  –≠—Ç–æ Telegram-–±–æ—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN. –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ - 10 –¥–Ω–µ–π. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–∫—É ‚ö°Ô∏è–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è ‚Üì"
    await message.answer(text, reply_markup=start_kb())


@router.message(F.text == "‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å")
async def status_button(message: Message):
    text = (
        "–î–æ—Å—Ç—É–ø: ‚òëÔ∏è <b>–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>\n"
        "‚îú –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: 10\n"
        "‚îî –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: 20.07.2025 18:00"
    )
    await message.answer(text, reply_markup=go_back())


@router.message(F.text == ("‚ö°Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"))
async def connect_button(message: Message):
    text = (
        "–î–æ—Å—Ç—É–ø –∫ VPN –≤ 2 —à–∞–≥–∞:\n\n"
        "1Ô∏è‚É£ <b>–°–∫–∞—á–∞—Ç—å</b> ‚Äì –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "2Ô∏è‚É£ <b>–ü–æ–¥–∫–ª—é—á–∏—Ç—å</b> ‚Äì –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
        "<b>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –≤—Ä—É—á–Ω—É—é:</b>\n"
        '‚Äì <a href="https://telegra.ph/Podklyuchenie-v2RayTun-Android-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android ü§ñ</a>\n'
        '‚Äì <a href="https://telegra.ph/Podklyuchenie-v2raytun-iOS-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS/MacOS üçè</a>\n'
        '‚Äì <a href="https://telegra.ph/Nastrojka-VPN-PK-Windows-08-08">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows üñ•</a>\n\n'
        "<b>–°—Å—ã–ª–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>\n"
        "<i>–¢–∞–ø–Ω–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ ‚Üì</i>"
    )
    await message.answer(text, reply_markup=connection_kb())


@router.message(F.text == ("üî• –ö—É–ø–∏—Ç—å"))
async def buy_button(message: Message):
    text = (
        "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ:\n\n"
        "250‚ÇΩ / 1 –º–µ—Å\n"
        "650‚ÇΩ / 3 –º–µ—Å\n"
        "1200‚ÇΩ / 6 –º–µ—Å\n\n"
        "üí≥ –ú–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑:\n"
        "SberPay, –°–ë–ü, T-Pay, –∫–∞—Ä—Ç—ã –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."
    )
    await message.answer(text, reply_markup=connection_kb())


@router.message(F.text == ("‚ùì –ü–æ–º–æ—â—å"))
async def help_button(message: Message):
    text = (
        "–ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–∑ –±–æ—Ç–∞ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
        "–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É ‚Üì"
    )
    await message.answer(text, reply_markup=help_kb())


@router.callback_query(F.data == "go_back")
async def go_back_handler(callback: CallbackQuery):
    # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ —á–∞—Ç–µ)
    try:
        await callback.message.delete()
        await callback.answer()
    except Exception:
        pass


@router.callback_query(F.data == "one_month")
async def one_month_handler(callback: CallbackQuery):
    text = "üëå –î–æ—Å—Ç—É–ø: 1 –º–µ—Å—è—Ü"
    await callback.message.answer(text, reply_markup=one_month_kb())


@router.callback_query(F.data == "three_months")
async def one_month_handler(callback: CallbackQuery):
    text = "‚ö°Ô∏è –î–æ—Å—Ç—É–ø: 3 –º–µ—Å—è—Ü–∞"
    await callback.message.answer(text, reply_markup=three_months_kb())


@router.callback_query(F.data == "six_months")
async def one_month_handler(callback: CallbackQuery):
    text = "üî• –î–æ—Å—Ç—É–ø: 6 –º–µ—Å—è—Ü–µ–≤"
    await callback.message.answer(text, reply_markup=six_months_kb())
